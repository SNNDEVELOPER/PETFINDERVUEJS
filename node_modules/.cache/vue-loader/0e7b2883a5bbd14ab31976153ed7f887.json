{"remainingRequest":"/Users/shaunnelson/Desktop/bcccvueproject/bcccvueproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shaunnelson/Desktop/bcccvueproject/bcccvueproject/src/components/petfinderPets.vue?vue&type=style&index=0&id=eea8bb0e&scoped=true&lang=css&","dependencies":[{"path":"/Users/shaunnelson/Desktop/bcccvueproject/bcccvueproject/src/components/petfinderPets.vue","mtime":1598463724000},{"path":"/Users/shaunnelson/Desktop/bcccvueproject/bcccvueproject/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shaunnelson/Desktop/bcccvueproject/bcccvueproject/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shaunnelson/Desktop/bcccvueproject/bcccvueproject/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shaunnelson/Desktop/bcccvueproject/bcccvueproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shaunnelson/Desktop/bcccvueproject/bcccvueproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogCi5wZXRUaHVtYiB7CiAgICB3aWR0aDogMTAwJTsKfQoucGV0VGh1bWIgaW1nIHsgCiAgICB3aWR0aDogIDEyMHB4OwogICAgaGVpZ2h0OiAxMjBweDsKICAgIG9iamVjdC1maXQ6IGNvdmVyOwogICAgbWF4LWhlaWdodDoxMDAlOwogICAgbWF4LXdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["petfinderPets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"petfinderPets.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <b-row>\n        <b-col cols=\"12\" md=\"auto\">\n\n            <section v-if=\"errors\">\n                <p>We're sorry, we're not able to retrieve this information at the moment, please try back later</p>\n            </section>\n\n            <section v-else>\n\n                <div v-if=\"loading\">\n                    <div class=\"text-center\">\n                        <b-spinner label=\"Spinning\"></b-spinner>\n                    </div>\n                </div>\n                \n              \n                    \n                        <b-card-group deck v-else> \n   \n                                <b-card\n                                    v-for=\"pets in petData\"\n                                    :key=\"pets.id\"\n                                    :title=\"pets.name\"\n                                    :img-src=\"pets.photos[0].small\"\n                                    img-alt=\"pet for adoption\"\n                                    class=\"mb-2\"\n                                >\n                                    <b-card-text>\n                                        <appPetChars :petCharsAge=\"pets.age\" :petCharsGender=\"pets.gender\" :petCharsSize=\"pets.size\" :petCharsColor=\"pets.colors.primary\" />\n                                    </b-card-text>\n\n                                    <b-button href=\"#\" variant=\"primary\">\n                                        <router-link :to=\"{ name: 'petdetails', query: { petID: pets.id} }\">Learn More</router-link>\n                                    </b-button>\n\n                                </b-card>\n                            \n                         </b-card-group>\n                    \n\n\n                    <div class=\"petCards\">\n\n                        <div v-if=\"!hasPets\">\n                            Sorry there are no pets to display.\n                        </div>\n    \n                        <div\n                            v-for=\"pets in petData\" \n                            :key=\"pets.id\"\n                            class=\"petCard\"\n                        >\n                        \n                            <h1>{{ pets.name }}</h1>\n\n                            <appPetChars :petCharsAge=\"pets.age\" :petCharsGender=\"pets.gender\" :petCharsSize=\"pets.size\" :petCharsColor=\"pets.colors.primary\" />\n\n                            <div class=\"petThumb\">\n                                <img :src=\"pets.photos[0].small\">\n                            </div>\n                            \n                                <router-link :to=\"{ name: 'petdetails', query: { petID: pets.id} }\">Learn More</router-link>\n                            \n                        </div>\n                    </div>\n                    \n               \n            </section>\n        </b-col>\n    </b-row> \n</template>\n\n<script>\nimport axios from 'axios';\nimport petChars from './petChars';\n\nexport default {\n    name: 'petfinderPets',\n    components: { \n        'appPetChars': petChars\n    },\n    props: {\n        title: String\n    },\n    data() {\n        return {\n            petData: {},\n            loading: true,\n            hasPets: false,\n            errors: false,\n            currentComponent: 'petfinderPets'\n        }\n    },\n    mounted() {\n        axios\n        .get('http://www.shaunnelson.com/skunkworks/petfindertest/getpets.php')\n        .then(response => (this.petData = this.removeNull(response.data.animals)))\n        .catch(error =>  {\n            console.log(error)\n            this.errors = true\n        })\n        .finally( () => { this.loading = false\n            if(this.petData.length != 0) {\n                this.hasPets = true\n            }\n        })\n    },\n    methods: {\n        stringLength: function(yourString, maxLength) { \n            let trimmedString = yourString.substr(0, maxLength);\n            trimmedString = trimmedString.substr(0, Math.min(trimmedString.length, trimmedString.lastIndexOf(\" \")))\n            trimmedString.length > 0 ? trimmedString = trimmedString + \" ...\" : trimmedString;\n            return trimmedString;  \n        },\n        swapComponent: function(component) {\n            this.currentComponent = component;\n        },\n        removeNull: function(obj) {\n            obj.forEach(function (ob) {\n                Object.keys(ob).forEach(function (k) {\n                    if (ob[k] === null) {\n                        ob[k] = '';\n                    }\n                });\n            });\n            return obj;\n        }\n    }\n}\n</script>\n\n\n<style scoped>\n \n.petThumb {\n    width: 100%;\n}\n.petThumb img { \n    width:  120px;\n    height: 120px;\n    object-fit: cover;\n    max-height:100%;\n    max-width: 100%;\n}\n</style>\n"]}]}